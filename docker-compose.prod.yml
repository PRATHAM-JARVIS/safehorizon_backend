# Production Docker Configuration
version: '3.8'

services:
  # FastAPI Application
  api:
    container_name: safehorizon_api
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    volumes:
      - ./docs/firebase-admin-sdk.json:/app/docs/firebase-admin-sdk.json:ro
      - ./models_store:/app/models_store
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - safehorizon-network

  # PostgreSQL with PostGIS
  db:
    container_name: safehorizon_db
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_DB=safehorizon
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=safehorizon_prod_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-extensions.sql:/docker-entrypoint-initdb.d/init-extensions.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - safehorizon-network

  # Redis for WebSocket and Caching
  redis:
    container_name: safehorizon_redis
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - safehorizon-network

  # NGINX Reverse Proxy (Optional - uncomment for SSL/production)
  # nginx:
  #   container_name: safehorizon_nginx
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - api
  #   restart: unless-stopped
  #   networks:
  #     - safehorizon-network

volumes:
  postgres_data:
  redis_data:

networks:
  safehorizon-network:
    driver: bridge